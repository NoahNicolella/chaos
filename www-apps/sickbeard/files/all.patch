--- sickbeard/db.py.orig	2011-03-26 22:25:36.518731498 -0600
+++ sickbeard/db.py	2011-03-26 22:26:45.637867392 -0600
@@ -35,7 +35,7 @@
 
 		self.dbFileName = dbFileName
 
-		self.connection = sqlite3.connect(os.path.join(sickbeard.PROG_DIR, self.dbFileName), 20)
+		self.connection = sqlite3.connect(os.path.join(sickbeard.DATA_DIR, self.dbFileName), 20)
 		self.connection.row_factory = sqlite3.Row
 
  	def action(self, query, args=None):
--- sickbeard/databases/mainDB.py.orig	2011-03-26 22:27:09.789565453 -0600
+++ sickbeard/databases/mainDB.py	2011-03-26 22:28:27.368595581 -0600
@@ -131,13 +131,13 @@
     def execute(self):
 
         numTries = 0
-        while not ek.ek(os.path.isfile, ek.ek(os.path.join, sickbeard.PROG_DIR, 'sickbeard.db.v0')):
-            if not ek.ek(os.path.isfile, ek.ek(os.path.join, sickbeard.PROG_DIR, 'sickbeard.db')):
+        while not ek.ek(os.path.isfile, ek.ek(os.path.join, sickbeard.DATA_DIR, 'sickbeard.db.v0')):
+            if not ek.ek(os.path.isfile, ek.ek(os.path.join, sickbeard.DATA_DIR, 'sickbeard.db')):
                 break
 
             try:
                 logger.log(u"Attempting to back up your sickbeard.db file before migration...")
-                shutil.copy(ek.ek(os.path.join, sickbeard.PROG_DIR, 'sickbeard.db'), ek.ek(os.path.join, sickbeard.PROG_DIR, 'sickbeard.db.v0'))
+                shutil.copy(ek.ek(os.path.join, sickbeard.DATA_DIR, 'sickbeard.db'), ek.ek(os.path.join, sickbeard.DATA_DIR, 'sickbeard.db.v0'))
                 logger.log(u"Done backup, proceeding with migration.")
                 break
             except Exception, e:
@@ -376,4 +376,4 @@
         sickbeard.save_config()
         
         self.incDBVersion()
-        
\ No newline at end of file
+        
--- SickBeard.py.orig	2011-03-26 22:28:49.648317047 -0600
+++ SickBeard.py	2011-03-26 23:21:06.745097940 -0600
@@ -73,7 +73,7 @@
         raise RuntimeError("1st fork failed: %s [%d]" %
                    (e.strerror, e.errno))
 
-    os.chdir(sickbeard.PROG_DIR)
+    os.chdir(sickbeard.DATA_DIR)
     os.setsid()
 
     # Make sure I can read my own files and shut out others
@@ -104,6 +104,7 @@
     sickbeard.MY_FULLNAME = os.path.normpath(os.path.abspath(__file__))
     sickbeard.MY_NAME = os.path.basename(sickbeard.MY_FULLNAME)
     sickbeard.PROG_DIR = os.path.dirname(sickbeard.MY_FULLNAME)
+    sickbeard.DATA_DIR = sickbeard.PROG_DIR
     sickbeard.MY_ARGS = sys.argv[1:]
     sickbeard.CREATEPID = False
 
@@ -117,7 +118,6 @@
     if not sickbeard.SYS_ENCODING or sickbeard.SYS_ENCODING in ('ANSI_X3.4-1968', 'US-ASCII'):
         sickbeard.SYS_ENCODING = 'UTF-8'
 
-    sickbeard.CONFIG_FILE = os.path.join(sickbeard.PROG_DIR, "config.ini")
 
     # need console logging for SickBeard.py and SickBeard-console.exe
     consoleLogging = (not hasattr(sys, "frozen")) or (sickbeard.MY_NAME.lower().find('-console') > 0)
@@ -126,9 +126,9 @@
     threading.currentThread().name = "MAIN"
 
     try:
-        opts, args = getopt.getopt(sys.argv[1:], "qfdp::", ['quiet', 'forceupdate', 'daemon', 'port=', 'tvbinz', 'pidfile='])
+        opts, args = getopt.getopt(sys.argv[1:], "qfdp::", ['quiet', 'forceupdate', 'daemon', 'port=', 'tvbinz', 'pidfile=', 'config=', 'datadir='])
     except getopt.GetoptError:
-        print "Available options: --quiet, --forceupdate, --port, --daemon --pidfile"
+        print "Available options: --quiet, --forceupdate, --port, --daemon --pidfile --config --datadir"
         sys.exit()
 
     forceUpdate = False
@@ -158,6 +158,14 @@
                 consoleLogging = False
                 sickbeard.DAEMON = True
 
+        # config file
+        if (o in ('--config')):
+            sickbeard.CONFIG_FILE = os.path.abspath(a)
+
+        # datadir
+        if (o in ('--datadir')):
+            sickbeard.DATA_DIR = os.path.abspath(a)
+
         # write a pidfile if requested
         if o in ('--pidfile'):
             sickbeard.PIDFILE = str(a)
@@ -176,6 +184,15 @@
                     raise SystemExit("Unable to write PID file: %s [%d]" % (e.strerror, e.errno))
             else:
                 logger.log(u"Not running in daemon mode. PID file creation disabled.")
+    
+    if not sickbeard.CONFIG_FILE:
+        sickbeard.CONFIG_FILE = os.path.join(sickbeard.DATA_DIR, "config.ini")
+
+    if not os.access(sickbeard.DATA_DIR, os.F_OK):
+        try:
+            os.makedirs(sickbeard.DATA_DIR, 0744)
+        except os.error, e:
+            raise SystemExit("Unable to create datadir '" + sickbeard.DATA_DIR + "'")
 
     if consoleLogging:
         print "Starting up Sick Beard "+SICKBEARD_VERSION+" from " + sickbeard.CONFIG_FILE
